// frontend/src/services/types.ts
import { FileObject } from '@supabase/storage-js';

// --- Base Facility Interface (Core Data) ---
export interface Facility {
  ID: string;
  Company: string | null;
  "Facility Name/Site": string | null;
  Location: string | null;
  "Operational Status": string | null;
  "Primary Recycling Technology": string | null;
  technology_category: string | null;
  // Keep numeric capacity here if needed for list/map views
  capacity_tonnes_per_year: number | null;
  Latitude: number | null;
  Longitude: number | null;
  created_at?: string;
  // Add any other core fields needed for list/map views
}

// --- NEW: Facility Details Interface (One-to-One) ---
export interface FacilityDetails {
  facility_id: string; // PK, FK to facilities.ID
  technology_description?: string | null;
  notes?: string | null; // Previously "Key Sources/Notes"
  website?: string | null;
  feedstock?: string | null;
  product?: string | null;
  investment_usd?: string | null; // Changed from number to string to match form/DB change
  jobs?: number | null;
  ev_equivalent_per_year?: number | null;
  environmental_impact_details?: string | null;
  status_effective_date_text?: string | null; // Previously unmapped form field
}

// --- UPDATED: Facility Timeline Event Interface (One-to-Many) ---
export interface FacilityTimelineEvent {
  id?: string; // Optional: UUID generated by DB
  facility_id?: string; // FK to facilities.ID (set during insert)
  event_date: string | null; // Changed from date: string | number
  event_name: string | null; // Changed from event: string
  description?: string | null;
}

// --- NEW: Facility Document Interface (One-to-Many) ---
export interface FacilityDocument {
  id?: string; // Optional: UUID generated by DB
  facility_id?: string; // FK to facilities.ID (set during insert)
  title?: string | null;
  url?: string | null; // Stores storage path
}

// --- NEW: Facility Image Interface (One-to-Many) ---
export interface FacilityImage {
  id?: string; // Optional: UUID generated by DB
  facility_id?: string; // FK to facilities.ID (set during insert)
  image_url?: string | null; // Stores storage path
  alt_text?: string | null;
  order?: number | null;
}

// --- Combined Facility Data Interface (for getFacilityById) ---
export interface FullFacilityData extends Facility {
  facility_details: FacilityDetails | null; // Use singular as it's one-to-one
  facility_timeline_events: FacilityTimelineEvent[];
  facility_documents: FacilityDocument[];
  facility_images: FacilityImage[];
}

// --- FacilityStats Interface ---
export interface FacilityStats {
   totalFacilities: number;
   operatingFacilities: number;
   constructionFacilities: number;
   plannedFacilities: number;
}

// --- UPDATED FacilityFormData Interface (Nested Structure for Forms) ---
export interface FacilityFormData {
  // Core Facility Fields (map directly to 'facilities' table)
  id?: string; // Corresponds to DB 'ID'
  company_name?: string | null; // Corresponds to DB 'Company'
  facility_name_site?: string | null; // Corresponds to DB 'Facility Name/Site'
  address?: string | null; // Corresponds to DB 'Location'
  status_name?: string | null; // Corresponds to DB 'Operational Status'
  technology_name?: string | null; // Corresponds to DB 'Primary Recycling Technology'
  technology_category?: string | null; // Corresponds to DB 'technology_category'
  processing_capacity_mt_year?: number | string | null; // Corresponds to DB 'capacity_tonnes_per_year' (handle parsing)
  latitude?: number | string | null; // Corresponds to DB 'Latitude' (handle parsing)
  longitude?: number | string | null; // Corresponds to DB 'Longitude' (handle parsing)

  // Nested Details (map to 'facility_details' table)
  details?: {
    technology_description?: string | null;
    notes?: string | null;
    website?: string | null;
    feedstock?: string | null;
    product?: string | null;
    investment_usd?: number | string | null; // Keep string for form input flexibility
    jobs?: number | string | null; // Keep string for form input flexibility
    ev_equivalent_per_year?: number | string | null; // Keep string for form input flexibility
    environmental_impact_details?: string | null;
    status_effective_date_text?: string | null;
  };

  // Related Lists (map to respective tables)
  timeline?: FacilityTimelineEvent[]; // Use updated interface
  documents?: FacilityDocument[]; // Use new interface
  images?: FacilityImage[]; // Use new interface (stores paths)
}

// --- Storage Interfaces ---
export interface StorageItem {
  name: string;
  path: string; // Full path from the bucket root
  type: 'file' | 'folder';
  url?: string | null; // Only files have URLs
  metadata?: FileObject['metadata']; // Only files have metadata in listFiles result
  created_at?: string;
  updated_at?: string;
  last_accessed_at?: string;
  id?: string | null; // Supabase FileObject ID (null for folders)
}

export interface StorageFile extends StorageItem {
  type: 'file';
  url: string | null;
}

// Tree structure for storage
export interface TreeNode {
  name: string;
  path: string;
  type: 'file' | 'folder';
  children?: TreeNode[];
  metadata?: FileObject['metadata'];
  url?: string | null;
}